#include <stdio.h>
#include <stdlib.h>
#define QSORT_TY unsigned
#define TY unsigned
#include "qsort.c"

TY *array;
TY *array_end;
unsigned member_size;

int
test (size_t nmemb)
{
    int j=0;
    array = malloc (nmemb * sizeof(TY));
    if (array == NULL)
        {
            printf ("%zd x %zd: no memory", nmemb, sizeof(TY));
            return 1;
        }
    
    array_end = array + nmemb;
    member_size = nmemb;
    unsigned long i;
    for (i = 0; i < nmemb; i++)
        {
            array[i] = (TY) random() % 64;
        }
    
    ssort (array, nmemb);
    
    for (i = 1; i < nmemb; i++)
        {
            if (array[i-1] > array[i])
                {
                    
                    printf ("%zd x %d: failure at offset %ld\n", nmemb,
                            sizeof(TY), i);
                    
                    for (j=0; j < nmemb;j++)
                        printf("%d ",array[j]);
                        printf("\n"); 
                    free (array);
                    return 1;
                }
        }
    
    free (array);
    return 0;
}

int main (int argc, char **argv)
{
    int ret = 0;
    if (argc >= 2)
        ret |= test (atoi (argv[1]));
    else
        {
            ret |= test (10000);
            ret |= test (200000);
            ret |= test (2000000);
            ret |= test (2132310);
            ret |= test (1202730);
            ret |= test (1184710);
            ret |= test (272710);
            ret |= test (14170);
            ret |= test (4170);
        }
    
    return ret;
}






